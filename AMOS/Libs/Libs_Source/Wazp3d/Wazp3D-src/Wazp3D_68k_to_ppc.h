/*
** This file was automatically generated by fdtrans 52.1.
** Do not edit it by hand. Instead, edit the sfd file
** that was used to generate this file
*/

#ifdef __USE_INLINE__
#undef __USE_INLINE__
#endif
#ifndef __NOGLOBALIFACE__
#define __NOGLOBALIFACE__
#endif

#include <exec/interfaces.h>
#include <exec/libraries.h>
#include <exec/emulation.h>
#include <interfaces/exec.h>
#include <interfaces/Warp3D.h>
#include <proto/Warp3D.h>

/* Only define this one if you want 68k programs to access to Warp3D v5 functions */
/*  #define WARP3DV5 1   */

static inline int8  convert_int8 (uint32 x) { return x; }
static inline int16 convert_int16(uint32 x) { return x; }


STATIC struct Library * stub_OpenPPC(ULONG *regarray)
{
    struct Library *Base = (struct Library *) regarray[REG68K_A6/4];
    struct ExtendedLibrary *ExtLib = (struct ExtendedLibrary *) ((ULONG)Base + Base->lib_PosSize);
    struct LibraryManagerInterface *Self = (struct LibraryManagerInterface *) ExtLib->ILibrary;

    return Self->Open(0);
}
STATIC CONST struct EmuTrap stub_Open = { TRAPINST, TRAPTYPE, (ULONG (*)(ULONG *))stub_OpenPPC };

STATIC APTR stub_ClosePPC(ULONG *regarray)
{
    struct Library *Base = (struct Library *) regarray[REG68K_A6/4];
    struct ExtendedLibrary *ExtLib = (struct ExtendedLibrary *) ((ULONG)Base + Base->lib_PosSize);
    struct LibraryManagerInterface *Self = (struct LibraryManagerInterface *) ExtLib->ILibrary;

    return Self->Close();
}
STATIC CONST struct EmuTrap stub_Close = { TRAPINST, TRAPTYPE, (ULONG (*)(ULONG *))stub_ClosePPC };

STATIC APTR stub_ExpungePPC(ULONG *regarray __attribute__((unused)))
{
    return NULL;
}
STATIC CONST struct EmuTrap stub_Expunge = { TRAPINST, TRAPTYPE, (ULONG (*)(ULONG *))stub_ExpungePPC };

STATIC ULONG stub_ReservedPPC(ULONG *regarray __attribute__((unused)))
{
    return 0UL;
}
STATIC CONST struct EmuTrap stub_Reserved = { TRAPINST, TRAPTYPE, stub_ReservedPPC };

static W3D_Context * stub_W3D_CreateContextPPC(uint32 *regarray)
{
	struct Library *Base = (struct Library *) regarray[REG68K_A6/4];
	struct ExtendedLibrary *ExtLib = (struct ExtendedLibrary *) ((uint32)Base + Base->lib_PosSize);
	struct Warp3DIFace *Self = (struct Warp3DIFace *) ExtLib->MainIFace;

	return Self->W3D_CreateContext(
		(ULONG *)regarray[8],
		(struct TagItem *)regarray[9]
	);
}
STATIC CONST struct EmuTrap stub_W3D_CreateContext = { TRAPINST, TRAPTYPE, (uint32 (*)(uint32 *))stub_W3D_CreateContextPPC };

static void stub_W3D_DestroyContextPPC(uint32 *regarray)
{
	struct Library *Base = (struct Library *) regarray[REG68K_A6/4];
	struct ExtendedLibrary *ExtLib = (struct ExtendedLibrary *) ((uint32)Base + Base->lib_PosSize);
	struct Warp3DIFace *Self = (struct Warp3DIFace *) ExtLib->MainIFace;

	Self->W3D_DestroyContext(
		(W3D_Context *)regarray[8]
	);
}
STATIC CONST struct EmuTrap stub_W3D_DestroyContext = { TRAPINST, TRAPTYPENR, (uint32 (*)(uint32 *))stub_W3D_DestroyContextPPC };

static ULONG stub_W3D_GetStatePPC(uint32 *regarray)
{
	struct Library *Base = (struct Library *) regarray[REG68K_A6/4];
	struct ExtendedLibrary *ExtLib = (struct ExtendedLibrary *) ((uint32)Base + Base->lib_PosSize);
	struct Warp3DIFace *Self = (struct Warp3DIFace *) ExtLib->MainIFace;

	return Self->W3D_GetState(
		(W3D_Context *)regarray[8],
		(ULONG)regarray[1]
	);
}
STATIC CONST struct EmuTrap stub_W3D_GetState = { TRAPINST, TRAPTYPE, (uint32 (*)(uint32 *))stub_W3D_GetStatePPC };

static ULONG stub_W3D_SetStatePPC(uint32 *regarray)
{
	struct Library *Base = (struct Library *) regarray[REG68K_A6/4];
	struct ExtendedLibrary *ExtLib = (struct ExtendedLibrary *) ((uint32)Base + Base->lib_PosSize);
	struct Warp3DIFace *Self = (struct Warp3DIFace *) ExtLib->MainIFace;

	return Self->W3D_SetState(
		(W3D_Context *)regarray[8],
		(ULONG)regarray[0],
		(ULONG)regarray[1]
	);
}
STATIC CONST struct EmuTrap stub_W3D_SetState = { TRAPINST, TRAPTYPE, (uint32 (*)(uint32 *))stub_W3D_SetStatePPC };

static ULONG stub_W3D_CheckDriverPPC(uint32 *regarray)
{
	struct Library *Base = (struct Library *) regarray[REG68K_A6/4];
	struct ExtendedLibrary *ExtLib = (struct ExtendedLibrary *) ((uint32)Base + Base->lib_PosSize);
	struct Warp3DIFace *Self = (struct Warp3DIFace *) ExtLib->MainIFace;

	return Self->W3D_CheckDriver(
	);
}
STATIC CONST struct EmuTrap stub_W3D_CheckDriver = { TRAPINST, TRAPTYPE, (uint32 (*)(uint32 *))stub_W3D_CheckDriverPPC };

static ULONG stub_W3D_LockHardwarePPC(uint32 *regarray)
{
	struct Library *Base = (struct Library *) regarray[REG68K_A6/4];
	struct ExtendedLibrary *ExtLib = (struct ExtendedLibrary *) ((uint32)Base + Base->lib_PosSize);
	struct Warp3DIFace *Self = (struct Warp3DIFace *) ExtLib->MainIFace;

	return Self->W3D_LockHardware(
		(W3D_Context *)regarray[8]
	);
}
STATIC CONST struct EmuTrap stub_W3D_LockHardware = { TRAPINST, TRAPTYPE, (uint32 (*)(uint32 *))stub_W3D_LockHardwarePPC };

static void stub_W3D_UnLockHardwarePPC(uint32 *regarray)
{
	struct Library *Base = (struct Library *) regarray[REG68K_A6/4];
	struct ExtendedLibrary *ExtLib = (struct ExtendedLibrary *) ((uint32)Base + Base->lib_PosSize);
	struct Warp3DIFace *Self = (struct Warp3DIFace *) ExtLib->MainIFace;

	Self->W3D_UnLockHardware(
		(W3D_Context *)regarray[8]
	);
}
STATIC CONST struct EmuTrap stub_W3D_UnLockHardware = { TRAPINST, TRAPTYPENR, (uint32 (*)(uint32 *))stub_W3D_UnLockHardwarePPC };

static void stub_W3D_WaitIdlePPC(uint32 *regarray)
{
	struct Library *Base = (struct Library *) regarray[REG68K_A6/4];
	struct ExtendedLibrary *ExtLib = (struct ExtendedLibrary *) ((uint32)Base + Base->lib_PosSize);
	struct Warp3DIFace *Self = (struct Warp3DIFace *) ExtLib->MainIFace;

	Self->W3D_WaitIdle(
		(W3D_Context *)regarray[8]
	);
}
STATIC CONST struct EmuTrap stub_W3D_WaitIdle = { TRAPINST, TRAPTYPENR, (uint32 (*)(uint32 *))stub_W3D_WaitIdlePPC };

static ULONG stub_W3D_CheckIdlePPC(uint32 *regarray)
{
	struct Library *Base = (struct Library *) regarray[REG68K_A6/4];
	struct ExtendedLibrary *ExtLib = (struct ExtendedLibrary *) ((uint32)Base + Base->lib_PosSize);
	struct Warp3DIFace *Self = (struct Warp3DIFace *) ExtLib->MainIFace;

	return Self->W3D_CheckIdle(
		(W3D_Context *)regarray[8]
	);
}
STATIC CONST struct EmuTrap stub_W3D_CheckIdle = { TRAPINST, TRAPTYPE, (uint32 (*)(uint32 *))stub_W3D_CheckIdlePPC };

static ULONG stub_W3D_QueryPPC(uint32 *regarray)
{
	struct Library *Base = (struct Library *) regarray[REG68K_A6/4];
	struct ExtendedLibrary *ExtLib = (struct ExtendedLibrary *) ((uint32)Base + Base->lib_PosSize);
	struct Warp3DIFace *Self = (struct Warp3DIFace *) ExtLib->MainIFace;

	return Self->W3D_Query(
		(W3D_Context *)regarray[8],
		(ULONG)regarray[0],
		(ULONG)regarray[1]
	);
}
STATIC CONST struct EmuTrap stub_W3D_Query = { TRAPINST, TRAPTYPE, (uint32 (*)(uint32 *))stub_W3D_QueryPPC };

static ULONG stub_W3D_GetTexFmtInfoPPC(uint32 *regarray)
{
	struct Library *Base = (struct Library *) regarray[REG68K_A6/4];
	struct ExtendedLibrary *ExtLib = (struct ExtendedLibrary *) ((uint32)Base + Base->lib_PosSize);
	struct Warp3DIFace *Self = (struct Warp3DIFace *) ExtLib->MainIFace;

	return Self->W3D_GetTexFmtInfo(
		(W3D_Context *)regarray[8],
		(ULONG)regarray[0],
		(ULONG)regarray[1]
	);
}
STATIC CONST struct EmuTrap stub_W3D_GetTexFmtInfo = { TRAPINST, TRAPTYPE, (uint32 (*)(uint32 *))stub_W3D_GetTexFmtInfoPPC };

static W3D_Texture * stub_W3D_AllocTexObjPPC(uint32 *regarray)
{
	struct Library *Base = (struct Library *) regarray[REG68K_A6/4];
	struct ExtendedLibrary *ExtLib = (struct ExtendedLibrary *) ((uint32)Base + Base->lib_PosSize);
	struct Warp3DIFace *Self = (struct Warp3DIFace *) ExtLib->MainIFace;

	return Self->W3D_AllocTexObj(
		(W3D_Context *)regarray[8],
		(ULONG *)regarray[9],
		(struct TagItem *)regarray[10]
	);
}
STATIC CONST struct EmuTrap stub_W3D_AllocTexObj = { TRAPINST, TRAPTYPE, (uint32 (*)(uint32 *))stub_W3D_AllocTexObjPPC };

static void stub_W3D_FreeTexObjPPC(uint32 *regarray)
{
	struct Library *Base = (struct Library *) regarray[REG68K_A6/4];
	struct ExtendedLibrary *ExtLib = (struct ExtendedLibrary *) ((uint32)Base + Base->lib_PosSize);
	struct Warp3DIFace *Self = (struct Warp3DIFace *) ExtLib->MainIFace;

	Self->W3D_FreeTexObj(
		(W3D_Context *)regarray[8],
		(W3D_Texture *)regarray[9]
	);
}
STATIC CONST struct EmuTrap stub_W3D_FreeTexObj = { TRAPINST, TRAPTYPENR, (uint32 (*)(uint32 *))stub_W3D_FreeTexObjPPC };

static void stub_W3D_ReleaseTexturePPC(uint32 *regarray)
{
	struct Library *Base = (struct Library *) regarray[REG68K_A6/4];
	struct ExtendedLibrary *ExtLib = (struct ExtendedLibrary *) ((uint32)Base + Base->lib_PosSize);
	struct Warp3DIFace *Self = (struct Warp3DIFace *) ExtLib->MainIFace;

	Self->W3D_ReleaseTexture(
		(W3D_Context *)regarray[8],
		(W3D_Texture *)regarray[9]
	);
}
STATIC CONST struct EmuTrap stub_W3D_ReleaseTexture = { TRAPINST, TRAPTYPENR, (uint32 (*)(uint32 *))stub_W3D_ReleaseTexturePPC };

static void stub_W3D_FlushTexturesPPC(uint32 *regarray)
{
	struct Library *Base = (struct Library *) regarray[REG68K_A6/4];
	struct ExtendedLibrary *ExtLib = (struct ExtendedLibrary *) ((uint32)Base + Base->lib_PosSize);
	struct Warp3DIFace *Self = (struct Warp3DIFace *) ExtLib->MainIFace;

	Self->W3D_FlushTextures(
		(W3D_Context *)regarray[8]
	);
}
STATIC CONST struct EmuTrap stub_W3D_FlushTextures = { TRAPINST, TRAPTYPENR, (uint32 (*)(uint32 *))stub_W3D_FlushTexturesPPC };

static ULONG stub_W3D_SetFilterPPC(uint32 *regarray)
{
	struct Library *Base = (struct Library *) regarray[REG68K_A6/4];
	struct ExtendedLibrary *ExtLib = (struct ExtendedLibrary *) ((uint32)Base + Base->lib_PosSize);
	struct Warp3DIFace *Self = (struct Warp3DIFace *) ExtLib->MainIFace;

	return Self->W3D_SetFilter(
		(W3D_Context *)regarray[8],
		(W3D_Texture *)regarray[9],
		(ULONG)regarray[0],
		(ULONG)regarray[1]
	);
}
STATIC CONST struct EmuTrap stub_W3D_SetFilter = { TRAPINST, TRAPTYPE, (uint32 (*)(uint32 *))stub_W3D_SetFilterPPC };

static ULONG stub_W3D_SetTexEnvPPC(uint32 *regarray)
{
	struct Library *Base = (struct Library *) regarray[REG68K_A6/4];
	struct ExtendedLibrary *ExtLib = (struct ExtendedLibrary *) ((uint32)Base + Base->lib_PosSize);
	struct Warp3DIFace *Self = (struct Warp3DIFace *) ExtLib->MainIFace;

	return Self->W3D_SetTexEnv(
		(W3D_Context *)regarray[8],
		(W3D_Texture *)regarray[9],
		(ULONG)regarray[1],
		(W3D_Color *)regarray[10]
	);
}
STATIC CONST struct EmuTrap stub_W3D_SetTexEnv = { TRAPINST, TRAPTYPE, (uint32 (*)(uint32 *))stub_W3D_SetTexEnvPPC };

static ULONG stub_W3D_SetWrapModePPC(uint32 *regarray)
{
	struct Library *Base = (struct Library *) regarray[REG68K_A6/4];
	struct ExtendedLibrary *ExtLib = (struct ExtendedLibrary *) ((uint32)Base + Base->lib_PosSize);
	struct Warp3DIFace *Self = (struct Warp3DIFace *) ExtLib->MainIFace;

	return Self->W3D_SetWrapMode(
		(W3D_Context *)regarray[8],
		(W3D_Texture *)regarray[9],
		(ULONG)regarray[0],
		(ULONG)regarray[1],
		(W3D_Color *)regarray[10]
	);
}
STATIC CONST struct EmuTrap stub_W3D_SetWrapMode = { TRAPINST, TRAPTYPE, (uint32 (*)(uint32 *))stub_W3D_SetWrapModePPC };

static ULONG stub_W3D_UpdateTexImagePPC(uint32 *regarray)
{
	struct Library *Base = (struct Library *) regarray[REG68K_A6/4];
	struct ExtendedLibrary *ExtLib = (struct ExtendedLibrary *) ((uint32)Base + Base->lib_PosSize);
	struct Warp3DIFace *Self = (struct Warp3DIFace *) ExtLib->MainIFace;

	return Self->W3D_UpdateTexImage(
		(W3D_Context *)regarray[8],
		(W3D_Texture *)regarray[9],
		(void *)regarray[10],
		(int)regarray[1],
		(ULONG *)regarray[11]
	);
}
STATIC CONST struct EmuTrap stub_W3D_UpdateTexImage = { TRAPINST, TRAPTYPE, (uint32 (*)(uint32 *))stub_W3D_UpdateTexImagePPC };

static ULONG stub_W3D_UploadTexturePPC(uint32 *regarray)
{
	struct Library *Base = (struct Library *) regarray[REG68K_A6/4];
	struct ExtendedLibrary *ExtLib = (struct ExtendedLibrary *) ((uint32)Base + Base->lib_PosSize);
	struct Warp3DIFace *Self = (struct Warp3DIFace *) ExtLib->MainIFace;

	return Self->W3D_UploadTexture(
		(W3D_Context *)regarray[8],
		(W3D_Texture *)regarray[9]
	);
}
STATIC CONST struct EmuTrap stub_W3D_UploadTexture = { TRAPINST, TRAPTYPE, (uint32 (*)(uint32 *))stub_W3D_UploadTexturePPC };

static ULONG stub_W3D_DrawLinePPC(uint32 *regarray)
{
	struct Library *Base = (struct Library *) regarray[REG68K_A6/4];
	struct ExtendedLibrary *ExtLib = (struct ExtendedLibrary *) ((uint32)Base + Base->lib_PosSize);
	struct Warp3DIFace *Self = (struct Warp3DIFace *) ExtLib->MainIFace;

	return Self->W3D_DrawLine(
		(W3D_Context *)regarray[8],
		(W3D_Line *)regarray[9]
	);
}
STATIC CONST struct EmuTrap stub_W3D_DrawLine = { TRAPINST, TRAPTYPE, (uint32 (*)(uint32 *))stub_W3D_DrawLinePPC };

static ULONG stub_W3D_DrawPointPPC(uint32 *regarray)
{
	struct Library *Base = (struct Library *) regarray[REG68K_A6/4];
	struct ExtendedLibrary *ExtLib = (struct ExtendedLibrary *) ((uint32)Base + Base->lib_PosSize);
	struct Warp3DIFace *Self = (struct Warp3DIFace *) ExtLib->MainIFace;

	return Self->W3D_DrawPoint(
		(W3D_Context *)regarray[8],
		(W3D_Point *)regarray[9]
	);
}
STATIC CONST struct EmuTrap stub_W3D_DrawPoint = { TRAPINST, TRAPTYPE, (uint32 (*)(uint32 *))stub_W3D_DrawPointPPC };

static ULONG stub_W3D_DrawTrianglePPC(uint32 *regarray)
{
	struct Library *Base = (struct Library *) regarray[REG68K_A6/4];
	struct ExtendedLibrary *ExtLib = (struct ExtendedLibrary *) ((uint32)Base + Base->lib_PosSize);
	struct Warp3DIFace *Self = (struct Warp3DIFace *) ExtLib->MainIFace;

	return Self->W3D_DrawTriangle(
		(W3D_Context *)regarray[8],
		(W3D_Triangle *)regarray[9]
	);
}
STATIC CONST struct EmuTrap stub_W3D_DrawTriangle = { TRAPINST, TRAPTYPE, (uint32 (*)(uint32 *))stub_W3D_DrawTrianglePPC };

static ULONG stub_W3D_DrawTriFanPPC(uint32 *regarray)
{
	struct Library *Base = (struct Library *) regarray[REG68K_A6/4];
	struct ExtendedLibrary *ExtLib = (struct ExtendedLibrary *) ((uint32)Base + Base->lib_PosSize);
	struct Warp3DIFace *Self = (struct Warp3DIFace *) ExtLib->MainIFace;

	return Self->W3D_DrawTriFan(
		(W3D_Context *)regarray[8],
		(W3D_Triangles *)regarray[9]
	);
}
STATIC CONST struct EmuTrap stub_W3D_DrawTriFan = { TRAPINST, TRAPTYPE, (uint32 (*)(uint32 *))stub_W3D_DrawTriFanPPC };

static ULONG stub_W3D_DrawTriStripPPC(uint32 *regarray)
{
	struct Library *Base = (struct Library *) regarray[REG68K_A6/4];
	struct ExtendedLibrary *ExtLib = (struct ExtendedLibrary *) ((uint32)Base + Base->lib_PosSize);
	struct Warp3DIFace *Self = (struct Warp3DIFace *) ExtLib->MainIFace;

	return Self->W3D_DrawTriStrip(
		(W3D_Context *)regarray[8],
		(W3D_Triangles *)regarray[9]
	);
}
STATIC CONST struct EmuTrap stub_W3D_DrawTriStrip = { TRAPINST, TRAPTYPE, (uint32 (*)(uint32 *))stub_W3D_DrawTriStripPPC };

static ULONG stub_W3D_SetAlphaModePPC(uint32 *regarray)
{
	struct Library *Base = (struct Library *) regarray[REG68K_A6/4];
	struct ExtendedLibrary *ExtLib = (struct ExtendedLibrary *) ((uint32)Base + Base->lib_PosSize);
	struct Warp3DIFace *Self = (struct Warp3DIFace *) ExtLib->MainIFace;

	return Self->W3D_SetAlphaMode(
		(W3D_Context *)regarray[8],
		(ULONG)regarray[1],
		(W3D_Float *)regarray[9]
	);
}
STATIC CONST struct EmuTrap stub_W3D_SetAlphaMode = { TRAPINST, TRAPTYPE, (uint32 (*)(uint32 *))stub_W3D_SetAlphaModePPC };

static ULONG stub_W3D_SetBlendModePPC(uint32 *regarray)
{
	struct Library *Base = (struct Library *) regarray[REG68K_A6/4];
	struct ExtendedLibrary *ExtLib = (struct ExtendedLibrary *) ((uint32)Base + Base->lib_PosSize);
	struct Warp3DIFace *Self = (struct Warp3DIFace *) ExtLib->MainIFace;

	return Self->W3D_SetBlendMode(
		(W3D_Context *)regarray[8],
		(ULONG)regarray[0],
		(ULONG)regarray[1]
	);
}
STATIC CONST struct EmuTrap stub_W3D_SetBlendMode = { TRAPINST, TRAPTYPE, (uint32 (*)(uint32 *))stub_W3D_SetBlendModePPC };

static ULONG stub_W3D_SetDrawRegionPPC(uint32 *regarray)
{
	struct Library *Base = (struct Library *) regarray[REG68K_A6/4];
	struct ExtendedLibrary *ExtLib = (struct ExtendedLibrary *) ((uint32)Base + Base->lib_PosSize);
	struct Warp3DIFace *Self = (struct Warp3DIFace *) ExtLib->MainIFace;

	return Self->W3D_SetDrawRegion(
		(W3D_Context *)regarray[8],
		(struct BitMap *)regarray[9],
		(int)regarray[1],
		(W3D_Scissor *)regarray[10]
	);
}
STATIC CONST struct EmuTrap stub_W3D_SetDrawRegion = { TRAPINST, TRAPTYPE, (uint32 (*)(uint32 *))stub_W3D_SetDrawRegionPPC };

static ULONG stub_W3D_SetFogParamsPPC(uint32 *regarray)
{
	struct Library *Base = (struct Library *) regarray[REG68K_A6/4];
	struct ExtendedLibrary *ExtLib = (struct ExtendedLibrary *) ((uint32)Base + Base->lib_PosSize);
	struct Warp3DIFace *Self = (struct Warp3DIFace *) ExtLib->MainIFace;

	return Self->W3D_SetFogParams(
		(W3D_Context *)regarray[8],
		(W3D_Fog *)regarray[9],
		(ULONG)regarray[1]
	);
}
STATIC CONST struct EmuTrap stub_W3D_SetFogParams = { TRAPINST, TRAPTYPE, (uint32 (*)(uint32 *))stub_W3D_SetFogParamsPPC };

static ULONG stub_W3D_SetColorMaskPPC(uint32 *regarray)
{
	struct Library *Base = (struct Library *) regarray[REG68K_A6/4];
	struct ExtendedLibrary *ExtLib = (struct ExtendedLibrary *) ((uint32)Base + Base->lib_PosSize);
	struct Warp3DIFace *Self = (struct Warp3DIFace *) ExtLib->MainIFace;

	return Self->W3D_SetColorMask(
		(W3D_Context *)regarray[8],
		(W3D_Bool)regarray[0],
		(W3D_Bool)regarray[1],
		(W3D_Bool)regarray[2],
		(W3D_Bool)regarray[3]
	);
}
STATIC CONST struct EmuTrap stub_W3D_SetColorMask = { TRAPINST, TRAPTYPE, (uint32 (*)(uint32 *))stub_W3D_SetColorMaskPPC };

static ULONG stub_W3D_SetStencilFuncPPC(uint32 *regarray)
{
	struct Library *Base = (struct Library *) regarray[REG68K_A6/4];
	struct ExtendedLibrary *ExtLib = (struct ExtendedLibrary *) ((uint32)Base + Base->lib_PosSize);
	struct Warp3DIFace *Self = (struct Warp3DIFace *) ExtLib->MainIFace;

	return Self->W3D_SetStencilFunc(
		(W3D_Context *)regarray[8],
		(ULONG)regarray[0],
		(ULONG)regarray[1],
		(ULONG)regarray[2]
	);
}
STATIC CONST struct EmuTrap stub_W3D_SetStencilFunc = { TRAPINST, TRAPTYPE, (uint32 (*)(uint32 *))stub_W3D_SetStencilFuncPPC };

static ULONG stub_W3D_AllocZBufferPPC(uint32 *regarray)
{
	struct Library *Base = (struct Library *) regarray[REG68K_A6/4];
	struct ExtendedLibrary *ExtLib = (struct ExtendedLibrary *) ((uint32)Base + Base->lib_PosSize);
	struct Warp3DIFace *Self = (struct Warp3DIFace *) ExtLib->MainIFace;

	return Self->W3D_AllocZBuffer(
		(W3D_Context *)regarray[8]
	);
}
STATIC CONST struct EmuTrap stub_W3D_AllocZBuffer = { TRAPINST, TRAPTYPE, (uint32 (*)(uint32 *))stub_W3D_AllocZBufferPPC };

static ULONG stub_W3D_FreeZBufferPPC(uint32 *regarray)
{
	struct Library *Base = (struct Library *) regarray[REG68K_A6/4];
	struct ExtendedLibrary *ExtLib = (struct ExtendedLibrary *) ((uint32)Base + Base->lib_PosSize);
	struct Warp3DIFace *Self = (struct Warp3DIFace *) ExtLib->MainIFace;

	return Self->W3D_FreeZBuffer(
		(W3D_Context *)regarray[8]
	);
}
STATIC CONST struct EmuTrap stub_W3D_FreeZBuffer = { TRAPINST, TRAPTYPE, (uint32 (*)(uint32 *))stub_W3D_FreeZBufferPPC };

static ULONG stub_W3D_ClearZBufferPPC(uint32 *regarray)
{
	struct Library *Base = (struct Library *) regarray[REG68K_A6/4];
	struct ExtendedLibrary *ExtLib = (struct ExtendedLibrary *) ((uint32)Base + Base->lib_PosSize);
	struct Warp3DIFace *Self = (struct Warp3DIFace *) ExtLib->MainIFace;

	return Self->W3D_ClearZBuffer(
		(W3D_Context *)regarray[8],
		(W3D_Double *)regarray[9]
	);
}
STATIC CONST struct EmuTrap stub_W3D_ClearZBuffer = { TRAPINST, TRAPTYPE, (uint32 (*)(uint32 *))stub_W3D_ClearZBufferPPC };

static ULONG stub_W3D_ReadZPixelPPC(uint32 *regarray)
{
	struct Library *Base = (struct Library *) regarray[REG68K_A6/4];
	struct ExtendedLibrary *ExtLib = (struct ExtendedLibrary *) ((uint32)Base + Base->lib_PosSize);
	struct Warp3DIFace *Self = (struct Warp3DIFace *) ExtLib->MainIFace;

	return Self->W3D_ReadZPixel(
		(W3D_Context *)regarray[8],
		(ULONG)regarray[0],
		(ULONG)regarray[1],
		(W3D_Double *)regarray[9]
	);
}
STATIC CONST struct EmuTrap stub_W3D_ReadZPixel = { TRAPINST, TRAPTYPE, (uint32 (*)(uint32 *))stub_W3D_ReadZPixelPPC };

static ULONG stub_W3D_ReadZSpanPPC(uint32 *regarray)
{
	struct Library *Base = (struct Library *) regarray[REG68K_A6/4];
	struct ExtendedLibrary *ExtLib = (struct ExtendedLibrary *) ((uint32)Base + Base->lib_PosSize);
	struct Warp3DIFace *Self = (struct Warp3DIFace *) ExtLib->MainIFace;

	return Self->W3D_ReadZSpan(
		(W3D_Context *)regarray[8],
		(ULONG)regarray[0],
		(ULONG)regarray[1],
		(ULONG)regarray[2],
		(W3D_Double *)regarray[9]
	);
}
STATIC CONST struct EmuTrap stub_W3D_ReadZSpan = { TRAPINST, TRAPTYPE, (uint32 (*)(uint32 *))stub_W3D_ReadZSpanPPC };

static ULONG stub_W3D_SetZCompareModePPC(uint32 *regarray)
{
	struct Library *Base = (struct Library *) regarray[REG68K_A6/4];
	struct ExtendedLibrary *ExtLib = (struct ExtendedLibrary *) ((uint32)Base + Base->lib_PosSize);
	struct Warp3DIFace *Self = (struct Warp3DIFace *) ExtLib->MainIFace;

	return Self->W3D_SetZCompareMode(
		(W3D_Context *)regarray[8],
		(ULONG)regarray[1]
	);
}
STATIC CONST struct EmuTrap stub_W3D_SetZCompareMode = { TRAPINST, TRAPTYPE, (uint32 (*)(uint32 *))stub_W3D_SetZCompareModePPC };

static ULONG stub_W3D_AllocStencilBufferPPC(uint32 *regarray)
{
	struct Library *Base = (struct Library *) regarray[REG68K_A6/4];
	struct ExtendedLibrary *ExtLib = (struct ExtendedLibrary *) ((uint32)Base + Base->lib_PosSize);
	struct Warp3DIFace *Self = (struct Warp3DIFace *) ExtLib->MainIFace;

	return Self->W3D_AllocStencilBuffer(
		(W3D_Context *)regarray[8]
	);
}
STATIC CONST struct EmuTrap stub_W3D_AllocStencilBuffer = { TRAPINST, TRAPTYPE, (uint32 (*)(uint32 *))stub_W3D_AllocStencilBufferPPC };

static ULONG stub_W3D_ClearStencilBufferPPC(uint32 *regarray)
{
	struct Library *Base = (struct Library *) regarray[REG68K_A6/4];
	struct ExtendedLibrary *ExtLib = (struct ExtendedLibrary *) ((uint32)Base + Base->lib_PosSize);
	struct Warp3DIFace *Self = (struct Warp3DIFace *) ExtLib->MainIFace;

	return Self->W3D_ClearStencilBuffer(
		(W3D_Context *)regarray[8],
		(ULONG *)regarray[9]
	);
}
STATIC CONST struct EmuTrap stub_W3D_ClearStencilBuffer = { TRAPINST, TRAPTYPE, (uint32 (*)(uint32 *))stub_W3D_ClearStencilBufferPPC };

static ULONG stub_W3D_FillStencilBufferPPC(uint32 *regarray)
{
	struct Library *Base = (struct Library *) regarray[REG68K_A6/4];
	struct ExtendedLibrary *ExtLib = (struct ExtendedLibrary *) ((uint32)Base + Base->lib_PosSize);
	struct Warp3DIFace *Self = (struct Warp3DIFace *) ExtLib->MainIFace;

	return Self->W3D_FillStencilBuffer(
		(W3D_Context *)regarray[8],
		(ULONG)regarray[0],
		(ULONG)regarray[1],
		(ULONG)regarray[2],
		(ULONG)regarray[3],
		(ULONG)regarray[4],
		(void *)regarray[9]
	);
}
STATIC CONST struct EmuTrap stub_W3D_FillStencilBuffer = { TRAPINST, TRAPTYPE, (uint32 (*)(uint32 *))stub_W3D_FillStencilBufferPPC };

static ULONG stub_W3D_FreeStencilBufferPPC(uint32 *regarray)
{
	struct Library *Base = (struct Library *) regarray[REG68K_A6/4];
	struct ExtendedLibrary *ExtLib = (struct ExtendedLibrary *) ((uint32)Base + Base->lib_PosSize);
	struct Warp3DIFace *Self = (struct Warp3DIFace *) ExtLib->MainIFace;

	return Self->W3D_FreeStencilBuffer(
		(W3D_Context *)regarray[8]
	);
}
STATIC CONST struct EmuTrap stub_W3D_FreeStencilBuffer = { TRAPINST, TRAPTYPE, (uint32 (*)(uint32 *))stub_W3D_FreeStencilBufferPPC };

static ULONG stub_W3D_ReadStencilPixelPPC(uint32 *regarray)
{
	struct Library *Base = (struct Library *) regarray[REG68K_A6/4];
	struct ExtendedLibrary *ExtLib = (struct ExtendedLibrary *) ((uint32)Base + Base->lib_PosSize);
	struct Warp3DIFace *Self = (struct Warp3DIFace *) ExtLib->MainIFace;

	return Self->W3D_ReadStencilPixel(
		(W3D_Context *)regarray[8],
		(ULONG)regarray[0],
		(ULONG)regarray[1],
		(ULONG *)regarray[9]
	);
}
STATIC CONST struct EmuTrap stub_W3D_ReadStencilPixel = { TRAPINST, TRAPTYPE, (uint32 (*)(uint32 *))stub_W3D_ReadStencilPixelPPC };

static ULONG stub_W3D_ReadStencilSpanPPC(uint32 *regarray)
{
	struct Library *Base = (struct Library *) regarray[REG68K_A6/4];
	struct ExtendedLibrary *ExtLib = (struct ExtendedLibrary *) ((uint32)Base + Base->lib_PosSize);
	struct Warp3DIFace *Self = (struct Warp3DIFace *) ExtLib->MainIFace;

	return Self->W3D_ReadStencilSpan(
		(W3D_Context *)regarray[8],
		(ULONG)regarray[0],
		(ULONG)regarray[1],
		(ULONG)regarray[2],
		(ULONG *)regarray[9]
	);
}
STATIC CONST struct EmuTrap stub_W3D_ReadStencilSpan = { TRAPINST, TRAPTYPE, (uint32 (*)(uint32 *))stub_W3D_ReadStencilSpanPPC };

static ULONG stub_W3D_SetLogicOpPPC(uint32 *regarray)
{
	struct Library *Base = (struct Library *) regarray[REG68K_A6/4];
	struct ExtendedLibrary *ExtLib = (struct ExtendedLibrary *) ((uint32)Base + Base->lib_PosSize);
	struct Warp3DIFace *Self = (struct Warp3DIFace *) ExtLib->MainIFace;

	return Self->W3D_SetLogicOp(
		(W3D_Context *)regarray[8],
		(ULONG)regarray[1]
	);
}
STATIC CONST struct EmuTrap stub_W3D_SetLogicOp = { TRAPINST, TRAPTYPE, (uint32 (*)(uint32 *))stub_W3D_SetLogicOpPPC };

static ULONG stub_W3D_HintPPC(uint32 *regarray)
{
	struct Library *Base = (struct Library *) regarray[REG68K_A6/4];
	struct ExtendedLibrary *ExtLib = (struct ExtendedLibrary *) ((uint32)Base + Base->lib_PosSize);
	struct Warp3DIFace *Self = (struct Warp3DIFace *) ExtLib->MainIFace;

	return Self->W3D_Hint(
		(W3D_Context *)regarray[8],
		(ULONG)regarray[0],
		(ULONG)regarray[1]
	);
}
STATIC CONST struct EmuTrap stub_W3D_Hint = { TRAPINST, TRAPTYPE, (uint32 (*)(uint32 *))stub_W3D_HintPPC };

static ULONG stub_W3D_SetDrawRegionWBMPPC(uint32 *regarray)
{
	struct Library *Base = (struct Library *) regarray[REG68K_A6/4];
	struct ExtendedLibrary *ExtLib = (struct ExtendedLibrary *) ((uint32)Base + Base->lib_PosSize);
	struct Warp3DIFace *Self = (struct Warp3DIFace *) ExtLib->MainIFace;

	return Self->W3D_SetDrawRegionWBM(
		(W3D_Context *)regarray[8],
		(W3D_Bitmap *)regarray[9],
		(W3D_Scissor *)regarray[10]
	);
}
STATIC CONST struct EmuTrap stub_W3D_SetDrawRegionWBM = { TRAPINST, TRAPTYPE, (uint32 (*)(uint32 *))stub_W3D_SetDrawRegionWBMPPC };

static ULONG stub_W3D_GetDriverStatePPC(uint32 *regarray)
{
	struct Library *Base = (struct Library *) regarray[REG68K_A6/4];
	struct ExtendedLibrary *ExtLib = (struct ExtendedLibrary *) ((uint32)Base + Base->lib_PosSize);
	struct Warp3DIFace *Self = (struct Warp3DIFace *) ExtLib->MainIFace;

	return Self->W3D_GetDriverState(
		(W3D_Context *)regarray[8]
	);
}
STATIC CONST struct EmuTrap stub_W3D_GetDriverState = { TRAPINST, TRAPTYPE, (uint32 (*)(uint32 *))stub_W3D_GetDriverStatePPC };

static ULONG stub_W3D_FlushPPC(uint32 *regarray)
{
	struct Library *Base = (struct Library *) regarray[REG68K_A6/4];
	struct ExtendedLibrary *ExtLib = (struct ExtendedLibrary *) ((uint32)Base + Base->lib_PosSize);
	struct Warp3DIFace *Self = (struct Warp3DIFace *) ExtLib->MainIFace;

	return Self->W3D_Flush(
		(W3D_Context *)regarray[8]
	);
}
STATIC CONST struct EmuTrap stub_W3D_Flush = { TRAPINST, TRAPTYPE, (uint32 (*)(uint32 *))stub_W3D_FlushPPC };

static ULONG stub_W3D_SetPenMaskPPC(uint32 *regarray)
{
	struct Library *Base = (struct Library *) regarray[REG68K_A6/4];
	struct ExtendedLibrary *ExtLib = (struct ExtendedLibrary *) ((uint32)Base + Base->lib_PosSize);
	struct Warp3DIFace *Self = (struct Warp3DIFace *) ExtLib->MainIFace;

	return Self->W3D_SetPenMask(
		(W3D_Context *)regarray[8],
		(ULONG)regarray[1]
	);
}
STATIC CONST struct EmuTrap stub_W3D_SetPenMask = { TRAPINST, TRAPTYPE, (uint32 (*)(uint32 *))stub_W3D_SetPenMaskPPC };

static ULONG stub_W3D_SetStencilOpPPC(uint32 *regarray)
{
	struct Library *Base = (struct Library *) regarray[REG68K_A6/4];
	struct ExtendedLibrary *ExtLib = (struct ExtendedLibrary *) ((uint32)Base + Base->lib_PosSize);
	struct Warp3DIFace *Self = (struct Warp3DIFace *) ExtLib->MainIFace;

	return Self->W3D_SetStencilOp(
		(W3D_Context *)regarray[8],
		(ULONG)regarray[0],
		(ULONG)regarray[1],
		(ULONG)regarray[2]
	);
}
STATIC CONST struct EmuTrap stub_W3D_SetStencilOp = { TRAPINST, TRAPTYPE, (uint32 (*)(uint32 *))stub_W3D_SetStencilOpPPC };

static ULONG stub_W3D_SetWriteMaskPPC(uint32 *regarray)
{
	struct Library *Base = (struct Library *) regarray[REG68K_A6/4];
	struct ExtendedLibrary *ExtLib = (struct ExtendedLibrary *) ((uint32)Base + Base->lib_PosSize);
	struct Warp3DIFace *Self = (struct Warp3DIFace *) ExtLib->MainIFace;

	return Self->W3D_SetWriteMask(
		(W3D_Context *)regarray[8],
		(ULONG)regarray[1]
	);
}
STATIC CONST struct EmuTrap stub_W3D_SetWriteMask = { TRAPINST, TRAPTYPE, (uint32 (*)(uint32 *))stub_W3D_SetWriteMaskPPC };

static ULONG stub_W3D_WriteStencilPixelPPC(uint32 *regarray)
{
	struct Library *Base = (struct Library *) regarray[REG68K_A6/4];
	struct ExtendedLibrary *ExtLib = (struct ExtendedLibrary *) ((uint32)Base + Base->lib_PosSize);
	struct Warp3DIFace *Self = (struct Warp3DIFace *) ExtLib->MainIFace;

	return Self->W3D_WriteStencilPixel(
		(W3D_Context *)regarray[8],
		(ULONG)regarray[0],
		(ULONG)regarray[1],
		(ULONG)regarray[2]
	);
}
STATIC CONST struct EmuTrap stub_W3D_WriteStencilPixel = { TRAPINST, TRAPTYPE, (uint32 (*)(uint32 *))stub_W3D_WriteStencilPixelPPC };

static ULONG stub_W3D_WriteStencilSpanPPC(uint32 *regarray)
{
	struct Library *Base = (struct Library *) regarray[REG68K_A6/4];
	struct ExtendedLibrary *ExtLib = (struct ExtendedLibrary *) ((uint32)Base + Base->lib_PosSize);
	struct Warp3DIFace *Self = (struct Warp3DIFace *) ExtLib->MainIFace;

	return Self->W3D_WriteStencilSpan(
		(W3D_Context *)regarray[8],
		(ULONG)regarray[0],
		(ULONG)regarray[1],
		(ULONG)regarray[2],
		(ULONG *)regarray[9],
		(UBYTE *)regarray[10]
	);
}
STATIC CONST struct EmuTrap stub_W3D_WriteStencilSpan = { TRAPINST, TRAPTYPE, (uint32 (*)(uint32 *))stub_W3D_WriteStencilSpanPPC };

static void stub_W3D_WriteZPixelPPC(uint32 *regarray)
{
	struct Library *Base = (struct Library *) regarray[REG68K_A6/4];
	struct ExtendedLibrary *ExtLib = (struct ExtendedLibrary *) ((uint32)Base + Base->lib_PosSize);
	struct Warp3DIFace *Self = (struct Warp3DIFace *) ExtLib->MainIFace;

	Self->W3D_WriteZPixel(
		(W3D_Context *)regarray[8],
		(ULONG)regarray[0],
		(ULONG)regarray[1],
		(W3D_Double *)regarray[9]
	);
}
STATIC CONST struct EmuTrap stub_W3D_WriteZPixel = { TRAPINST, TRAPTYPENR, (uint32 (*)(uint32 *))stub_W3D_WriteZPixelPPC };

static void stub_W3D_WriteZSpanPPC(uint32 *regarray)
{
	struct Library *Base = (struct Library *) regarray[REG68K_A6/4];
	struct ExtendedLibrary *ExtLib = (struct ExtendedLibrary *) ((uint32)Base + Base->lib_PosSize);
	struct Warp3DIFace *Self = (struct Warp3DIFace *) ExtLib->MainIFace;

	Self->W3D_WriteZSpan(
		(W3D_Context *)regarray[8],
		(ULONG)regarray[0],
		(ULONG)regarray[1],
		(ULONG)regarray[2],
		(W3D_Double *)regarray[9],
		(UBYTE *)regarray[10]
	);
}
STATIC CONST struct EmuTrap stub_W3D_WriteZSpan = { TRAPINST, TRAPTYPENR, (uint32 (*)(uint32 *))stub_W3D_WriteZSpanPPC };

static ULONG stub_W3D_SetCurrentColorPPC(uint32 *regarray)
{
	struct Library *Base = (struct Library *) regarray[REG68K_A6/4];
	struct ExtendedLibrary *ExtLib = (struct ExtendedLibrary *) ((uint32)Base + Base->lib_PosSize);
	struct Warp3DIFace *Self = (struct Warp3DIFace *) ExtLib->MainIFace;

	return Self->W3D_SetCurrentColor(
		(W3D_Context *)regarray[8],
		(W3D_Color *)regarray[9]
	);
}
STATIC CONST struct EmuTrap stub_W3D_SetCurrentColor = { TRAPINST, TRAPTYPE, (uint32 (*)(uint32 *))stub_W3D_SetCurrentColorPPC };

static ULONG stub_W3D_SetCurrentPenPPC(uint32 *regarray)
{
	struct Library *Base = (struct Library *) regarray[REG68K_A6/4];
	struct ExtendedLibrary *ExtLib = (struct ExtendedLibrary *) ((uint32)Base + Base->lib_PosSize);
	struct Warp3DIFace *Self = (struct Warp3DIFace *) ExtLib->MainIFace;

	return Self->W3D_SetCurrentPen(
		(W3D_Context *)regarray[8],
		(ULONG)regarray[1]
	);
}
STATIC CONST struct EmuTrap stub_W3D_SetCurrentPen = { TRAPINST, TRAPTYPE, (uint32 (*)(uint32 *))stub_W3D_SetCurrentPenPPC };

static ULONG stub_W3D_UpdateTexSubImagePPC(uint32 *regarray)
{
	struct Library *Base = (struct Library *) regarray[REG68K_A6/4];
	struct ExtendedLibrary *ExtLib = (struct ExtendedLibrary *) ((uint32)Base + Base->lib_PosSize);
	struct Warp3DIFace *Self = (struct Warp3DIFace *) ExtLib->MainIFace;

	return Self->W3D_UpdateTexSubImage(
		(W3D_Context *)regarray[8],
		(W3D_Texture *)regarray[9],
		(void *)regarray[10],
		(ULONG)regarray[1],
		(ULONG *)regarray[11],
		(W3D_Scissor *)regarray[12],
		(ULONG)regarray[0]
	);
}
STATIC CONST struct EmuTrap stub_W3D_UpdateTexSubImage = { TRAPINST, TRAPTYPE, (uint32 (*)(uint32 *))stub_W3D_UpdateTexSubImagePPC };

static ULONG stub_W3D_FreeAllTexObjPPC(uint32 *regarray)
{
	struct Library *Base = (struct Library *) regarray[REG68K_A6/4];
	struct ExtendedLibrary *ExtLib = (struct ExtendedLibrary *) ((uint32)Base + Base->lib_PosSize);
	struct Warp3DIFace *Self = (struct Warp3DIFace *) ExtLib->MainIFace;

	return Self->W3D_FreeAllTexObj(
		(W3D_Context *)regarray[8]
	);
}
STATIC CONST struct EmuTrap stub_W3D_FreeAllTexObj = { TRAPINST, TRAPTYPE, (uint32 (*)(uint32 *))stub_W3D_FreeAllTexObjPPC };

static ULONG stub_W3D_GetDestFmtPPC(uint32 *regarray)
{
	struct Library *Base = (struct Library *) regarray[REG68K_A6/4];
	struct ExtendedLibrary *ExtLib = (struct ExtendedLibrary *) ((uint32)Base + Base->lib_PosSize);
	struct Warp3DIFace *Self = (struct Warp3DIFace *) ExtLib->MainIFace;

	return Self->W3D_GetDestFmt(
	);
}
STATIC CONST struct EmuTrap stub_W3D_GetDestFmt = { TRAPINST, TRAPTYPE, (uint32 (*)(uint32 *))stub_W3D_GetDestFmtPPC };

static ULONG stub_W3D_DrawLineStripPPC(uint32 *regarray)
{
	struct Library *Base = (struct Library *) regarray[REG68K_A6/4];
	struct ExtendedLibrary *ExtLib = (struct ExtendedLibrary *) ((uint32)Base + Base->lib_PosSize);
	struct Warp3DIFace *Self = (struct Warp3DIFace *) ExtLib->MainIFace;

	return Self->W3D_DrawLineStrip(
		(W3D_Context *)regarray[8],
		(W3D_Lines *)regarray[9]
	);
}
STATIC CONST struct EmuTrap stub_W3D_DrawLineStrip = { TRAPINST, TRAPTYPE, (uint32 (*)(uint32 *))stub_W3D_DrawLineStripPPC };

static ULONG stub_W3D_DrawLineLoopPPC(uint32 *regarray)
{
	struct Library *Base = (struct Library *) regarray[REG68K_A6/4];
	struct ExtendedLibrary *ExtLib = (struct ExtendedLibrary *) ((uint32)Base + Base->lib_PosSize);
	struct Warp3DIFace *Self = (struct Warp3DIFace *) ExtLib->MainIFace;

	return Self->W3D_DrawLineLoop(
		(W3D_Context *)regarray[8],
		(W3D_Lines *)regarray[9]
	);
}
STATIC CONST struct EmuTrap stub_W3D_DrawLineLoop = { TRAPINST, TRAPTYPE, (uint32 (*)(uint32 *))stub_W3D_DrawLineLoopPPC };

static W3D_Driver ** stub_W3D_GetDriversPPC(uint32 *regarray)
{
	struct Library *Base = (struct Library *) regarray[REG68K_A6/4];
	struct ExtendedLibrary *ExtLib = (struct ExtendedLibrary *) ((uint32)Base + Base->lib_PosSize);
	struct Warp3DIFace *Self = (struct Warp3DIFace *) ExtLib->MainIFace;

	return Self->W3D_GetDrivers(
	);
}
STATIC CONST struct EmuTrap stub_W3D_GetDrivers = { TRAPINST, TRAPTYPE, (uint32 (*)(uint32 *))stub_W3D_GetDriversPPC };

static ULONG stub_W3D_QueryDriverPPC(uint32 *regarray)
{
	struct Library *Base = (struct Library *) regarray[REG68K_A6/4];
	struct ExtendedLibrary *ExtLib = (struct ExtendedLibrary *) ((uint32)Base + Base->lib_PosSize);
	struct Warp3DIFace *Self = (struct Warp3DIFace *) ExtLib->MainIFace;

	return Self->W3D_QueryDriver(
		(W3D_Driver *)regarray[8],
		(ULONG)regarray[0],
		(ULONG)regarray[1]
	);
}
STATIC CONST struct EmuTrap stub_W3D_QueryDriver = { TRAPINST, TRAPTYPE, (uint32 (*)(uint32 *))stub_W3D_QueryDriverPPC };

static ULONG stub_W3D_GetDriverTexFmtInfoPPC(uint32 *regarray)
{
	struct Library *Base = (struct Library *) regarray[REG68K_A6/4];
	struct ExtendedLibrary *ExtLib = (struct ExtendedLibrary *) ((uint32)Base + Base->lib_PosSize);
	struct Warp3DIFace *Self = (struct Warp3DIFace *) ExtLib->MainIFace;

	return Self->W3D_GetDriverTexFmtInfo(
		(W3D_Driver *)regarray[8],
		(ULONG)regarray[0],
		(ULONG)regarray[1]
	);
}
STATIC CONST struct EmuTrap stub_W3D_GetDriverTexFmtInfo = { TRAPINST, TRAPTYPE, (uint32 (*)(uint32 *))stub_W3D_GetDriverTexFmtInfoPPC };

static ULONG stub_W3D_RequestModePPC(uint32 *regarray)
{
	struct Library *Base = (struct Library *) regarray[REG68K_A6/4];
	struct ExtendedLibrary *ExtLib = (struct ExtendedLibrary *) ((uint32)Base + Base->lib_PosSize);
	struct Warp3DIFace *Self = (struct Warp3DIFace *) ExtLib->MainIFace;

	return Self->W3D_RequestMode(
		(struct TagItem *)regarray[8]
	);
}
STATIC CONST struct EmuTrap stub_W3D_RequestMode = { TRAPINST, TRAPTYPE, (uint32 (*)(uint32 *))stub_W3D_RequestModePPC };

static void stub_W3D_SetScissorPPC(uint32 *regarray)
{
	struct Library *Base = (struct Library *) regarray[REG68K_A6/4];
	struct ExtendedLibrary *ExtLib = (struct ExtendedLibrary *) ((uint32)Base + Base->lib_PosSize);
	struct Warp3DIFace *Self = (struct Warp3DIFace *) ExtLib->MainIFace;

	Self->W3D_SetScissor(
		(W3D_Context *)regarray[8],
		(W3D_Scissor *)regarray[9]
	);
}
STATIC CONST struct EmuTrap stub_W3D_SetScissor = { TRAPINST, TRAPTYPENR, (uint32 (*)(uint32 *))stub_W3D_SetScissorPPC };

static void stub_W3D_FlushFramePPC(uint32 *regarray)
{
	struct Library *Base = (struct Library *) regarray[REG68K_A6/4];
	struct ExtendedLibrary *ExtLib = (struct ExtendedLibrary *) ((uint32)Base + Base->lib_PosSize);
	struct Warp3DIFace *Self = (struct Warp3DIFace *) ExtLib->MainIFace;

	Self->W3D_FlushFrame(
		(W3D_Context *)regarray[8]
	);
}
STATIC CONST struct EmuTrap stub_W3D_FlushFrame = { TRAPINST, TRAPTYPENR, (uint32 (*)(uint32 *))stub_W3D_FlushFramePPC };

static W3D_Driver * stub_W3D_TestModePPC(uint32 *regarray)
{
	struct Library *Base = (struct Library *) regarray[REG68K_A6/4];
	struct ExtendedLibrary *ExtLib = (struct ExtendedLibrary *) ((uint32)Base + Base->lib_PosSize);
	struct Warp3DIFace *Self = (struct Warp3DIFace *) ExtLib->MainIFace;

	return Self->W3D_TestMode(
		(ULONG)regarray[0]
	);
}
STATIC CONST struct EmuTrap stub_W3D_TestMode = { TRAPINST, TRAPTYPE, (uint32 (*)(uint32 *))stub_W3D_TestModePPC };

static ULONG stub_W3D_SetChromaTestBoundsPPC(uint32 *regarray)
{
	struct Library *Base = (struct Library *) regarray[REG68K_A6/4];
	struct ExtendedLibrary *ExtLib = (struct ExtendedLibrary *) ((uint32)Base + Base->lib_PosSize);
	struct Warp3DIFace *Self = (struct Warp3DIFace *) ExtLib->MainIFace;

	return Self->W3D_SetChromaTestBounds(
		(W3D_Context *)regarray[8],
		(W3D_Texture *)regarray[9],
		(ULONG)regarray[0],
		(ULONG)regarray[1],
		(ULONG)regarray[2]
	);
}
STATIC CONST struct EmuTrap stub_W3D_SetChromaTestBounds = { TRAPINST, TRAPTYPE, (uint32 (*)(uint32 *))stub_W3D_SetChromaTestBoundsPPC };

static ULONG stub_W3D_ClearDrawRegionPPC(uint32 *regarray)
{
	struct Library *Base = (struct Library *) regarray[REG68K_A6/4];
	struct ExtendedLibrary *ExtLib = (struct ExtendedLibrary *) ((uint32)Base + Base->lib_PosSize);
	struct Warp3DIFace *Self = (struct Warp3DIFace *) ExtLib->MainIFace;

	return Self->W3D_ClearDrawRegion(
		(W3D_Context *)regarray[8],
		(ULONG)regarray[0]
	);
}
STATIC CONST struct EmuTrap stub_W3D_ClearDrawRegion = { TRAPINST, TRAPTYPE, (uint32 (*)(uint32 *))stub_W3D_ClearDrawRegionPPC };

static ULONG stub_W3D_DrawTriangleVPPC(uint32 *regarray)
{
	struct Library *Base = (struct Library *) regarray[REG68K_A6/4];
	struct ExtendedLibrary *ExtLib = (struct ExtendedLibrary *) ((uint32)Base + Base->lib_PosSize);
	struct Warp3DIFace *Self = (struct Warp3DIFace *) ExtLib->MainIFace;

	return Self->W3D_DrawTriangleV(
		(W3D_Context *)regarray[8],
		(W3D_TriangleV *)regarray[9]
	);
}
STATIC CONST struct EmuTrap stub_W3D_DrawTriangleV = { TRAPINST, TRAPTYPE, (uint32 (*)(uint32 *))stub_W3D_DrawTriangleVPPC };

static ULONG stub_W3D_DrawTriFanVPPC(uint32 *regarray)
{
	struct Library *Base = (struct Library *) regarray[REG68K_A6/4];
	struct ExtendedLibrary *ExtLib = (struct ExtendedLibrary *) ((uint32)Base + Base->lib_PosSize);
	struct Warp3DIFace *Self = (struct Warp3DIFace *) ExtLib->MainIFace;

	return Self->W3D_DrawTriFanV(
		(W3D_Context *)regarray[8],
		(W3D_TrianglesV *)regarray[9]
	);
}
STATIC CONST struct EmuTrap stub_W3D_DrawTriFanV = { TRAPINST, TRAPTYPE, (uint32 (*)(uint32 *))stub_W3D_DrawTriFanVPPC };

static ULONG stub_W3D_DrawTriStripVPPC(uint32 *regarray)
{
	struct Library *Base = (struct Library *) regarray[REG68K_A6/4];
	struct ExtendedLibrary *ExtLib = (struct ExtendedLibrary *) ((uint32)Base + Base->lib_PosSize);
	struct Warp3DIFace *Self = (struct Warp3DIFace *) ExtLib->MainIFace;

	return Self->W3D_DrawTriStripV(
		(W3D_Context *)regarray[8],
		(W3D_TrianglesV *)regarray[9]
	);
}
STATIC CONST struct EmuTrap stub_W3D_DrawTriStripV = { TRAPINST, TRAPTYPE, (uint32 (*)(uint32 *))stub_W3D_DrawTriStripVPPC };

static W3D_ScreenMode * stub_W3D_GetScreenmodeListPPC(uint32 *regarray)
{
	struct Library *Base = (struct Library *) regarray[REG68K_A6/4];
	struct ExtendedLibrary *ExtLib = (struct ExtendedLibrary *) ((uint32)Base + Base->lib_PosSize);
	struct Warp3DIFace *Self = (struct Warp3DIFace *) ExtLib->MainIFace;

	return Self->W3D_GetScreenmodeList(
	);
}
STATIC CONST struct EmuTrap stub_W3D_GetScreenmodeList = { TRAPINST, TRAPTYPE, (uint32 (*)(uint32 *))stub_W3D_GetScreenmodeListPPC };

static void stub_W3D_FreeScreenmodeListPPC(uint32 *regarray)
{
	struct Library *Base = (struct Library *) regarray[REG68K_A6/4];
	struct ExtendedLibrary *ExtLib = (struct ExtendedLibrary *) ((uint32)Base + Base->lib_PosSize);
	struct Warp3DIFace *Self = (struct Warp3DIFace *) ExtLib->MainIFace;

	Self->W3D_FreeScreenmodeList(
		(W3D_ScreenMode *)regarray[8]
	);
}
STATIC CONST struct EmuTrap stub_W3D_FreeScreenmodeList = { TRAPINST, TRAPTYPENR, (uint32 (*)(uint32 *))stub_W3D_FreeScreenmodeListPPC };

static ULONG stub_W3D_BestModeIDPPC(uint32 *regarray)
{
	struct Library *Base = (struct Library *) regarray[REG68K_A6/4];
	struct ExtendedLibrary *ExtLib = (struct ExtendedLibrary *) ((uint32)Base + Base->lib_PosSize);
	struct Warp3DIFace *Self = (struct Warp3DIFace *) ExtLib->MainIFace;

	return Self->W3D_BestModeID(
		(struct TagItem *)regarray[8]
	);
}
STATIC CONST struct EmuTrap stub_W3D_BestModeID = { TRAPINST, TRAPTYPE, (uint32 (*)(uint32 *))stub_W3D_BestModeIDPPC };

static ULONG stub_W3D_VertexPointerPPC(uint32 *regarray)
{
	struct Library *Base = (struct Library *) regarray[REG68K_A6/4];
	struct ExtendedLibrary *ExtLib = (struct ExtendedLibrary *) ((uint32)Base + Base->lib_PosSize);
	struct Warp3DIFace *Self = (struct Warp3DIFace *) ExtLib->MainIFace;

	return Self->W3D_VertexPointer(
		(W3D_Context *)regarray[8],
		(void *)regarray[9],
		(int)regarray[0],
		(ULONG)regarray[1],
		(ULONG)regarray[2]
	);
}
STATIC CONST struct EmuTrap stub_W3D_VertexPointer = { TRAPINST, TRAPTYPE, (uint32 (*)(uint32 *))stub_W3D_VertexPointerPPC };

static ULONG stub_W3D_TexCoordPointerPPC(uint32 *regarray)
{
	struct Library *Base = (struct Library *) regarray[REG68K_A6/4];
	struct ExtendedLibrary *ExtLib = (struct ExtendedLibrary *) ((uint32)Base + Base->lib_PosSize);
	struct Warp3DIFace *Self = (struct Warp3DIFace *) ExtLib->MainIFace;

	return Self->W3D_TexCoordPointer(
		(W3D_Context *)regarray[8],
		(void *)regarray[9],
		(int)regarray[0],
		(int)regarray[1],
		(int)regarray[2],
		(int)regarray[3],
		(ULONG)regarray[4]
	);
}
STATIC CONST struct EmuTrap stub_W3D_TexCoordPointer = { TRAPINST, TRAPTYPE, (uint32 (*)(uint32 *))stub_W3D_TexCoordPointerPPC };

static ULONG stub_W3D_ColorPointerPPC(uint32 *regarray)
{
	struct Library *Base = (struct Library *) regarray[REG68K_A6/4];
	struct ExtendedLibrary *ExtLib = (struct ExtendedLibrary *) ((uint32)Base + Base->lib_PosSize);
	struct Warp3DIFace *Self = (struct Warp3DIFace *) ExtLib->MainIFace;

	return Self->W3D_ColorPointer(
		(W3D_Context *)regarray[8],
		(void *)regarray[9],
		(int)regarray[0],
		(ULONG)regarray[1],
		(ULONG)regarray[2],
		(ULONG)regarray[3]
	);
}
STATIC CONST struct EmuTrap stub_W3D_ColorPointer = { TRAPINST, TRAPTYPE, (uint32 (*)(uint32 *))stub_W3D_ColorPointerPPC };

static ULONG stub_W3D_BindTexturePPC(uint32 *regarray)
{
	struct Library *Base = (struct Library *) regarray[REG68K_A6/4];
	struct ExtendedLibrary *ExtLib = (struct ExtendedLibrary *) ((uint32)Base + Base->lib_PosSize);
	struct Warp3DIFace *Self = (struct Warp3DIFace *) ExtLib->MainIFace;

	return Self->W3D_BindTexture(
		(W3D_Context *)regarray[8],
		(ULONG)regarray[0],
		(W3D_Texture *)regarray[9]
	);
}
STATIC CONST struct EmuTrap stub_W3D_BindTexture = { TRAPINST, TRAPTYPE, (uint32 (*)(uint32 *))stub_W3D_BindTexturePPC };

static ULONG stub_W3D_DrawArrayPPC(uint32 *regarray)
{
	struct Library *Base = (struct Library *) regarray[REG68K_A6/4];
	struct ExtendedLibrary *ExtLib = (struct ExtendedLibrary *) ((uint32)Base + Base->lib_PosSize);
	struct Warp3DIFace *Self = (struct Warp3DIFace *) ExtLib->MainIFace;

	return Self->W3D_DrawArray(
		(W3D_Context *)regarray[8],
		(ULONG)regarray[0],
		(ULONG)regarray[1],
		(ULONG)regarray[2]
	);
}
STATIC CONST struct EmuTrap stub_W3D_DrawArray = { TRAPINST, TRAPTYPE, (uint32 (*)(uint32 *))stub_W3D_DrawArrayPPC };

static ULONG stub_W3D_DrawElementsPPC(uint32 *regarray)
{
	struct Library *Base = (struct Library *) regarray[REG68K_A6/4];
	struct ExtendedLibrary *ExtLib = (struct ExtendedLibrary *) ((uint32)Base + Base->lib_PosSize);
	struct Warp3DIFace *Self = (struct Warp3DIFace *) ExtLib->MainIFace;

	return Self->W3D_DrawElements(
		(W3D_Context *)regarray[8],
		(ULONG)regarray[0],
		(ULONG)regarray[1],
		(ULONG)regarray[2],
		(void *)regarray[9]
	);
}
STATIC CONST struct EmuTrap stub_W3D_DrawElements = { TRAPINST, TRAPTYPE, (uint32 (*)(uint32 *))stub_W3D_DrawElementsPPC };

static void stub_W3D_SetFrontFacePPC(uint32 *regarray)
{
	struct Library *Base = (struct Library *) regarray[REG68K_A6/4];
	struct ExtendedLibrary *ExtLib = (struct ExtendedLibrary *) ((uint32)Base + Base->lib_PosSize);
	struct Warp3DIFace *Self = (struct Warp3DIFace *) ExtLib->MainIFace;

	Self->W3D_SetFrontFace(
		(W3D_Context *)regarray[8],
		(ULONG)regarray[0]
	);
}
STATIC CONST struct EmuTrap stub_W3D_SetFrontFace = { TRAPINST, TRAPTYPENR, (uint32 (*)(uint32 *))stub_W3D_SetFrontFacePPC };
#ifdef WARP3DV5
static ULONG stub_W3D_SetTextureBlendPPC(uint32 *regarray)
{
	struct Library *Base = (struct Library *) regarray[REG68K_A6/4];
	struct ExtendedLibrary *ExtLib = (struct ExtendedLibrary *) ((uint32)Base + Base->lib_PosSize);
	struct Warp3DIFace *Self = (struct Warp3DIFace *) ExtLib->MainIFace;

	return Self->W3D_SetTextureBlend(
		(W3D_Context *)regarray[8],
		(struct TagItem *)regarray[9]
	);
}
STATIC CONST struct EmuTrap stub_W3D_SetTextureBlend = { TRAPINST, TRAPTYPE, (uint32 (*)(uint32 *))stub_W3D_SetTextureBlendPPC };

static ULONG stub_W3D_SecondaryColorPointerPPC(uint32 *regarray)
{
	struct Library *Base = (struct Library *) regarray[REG68K_A6/4];
	struct ExtendedLibrary *ExtLib = (struct ExtendedLibrary *) ((uint32)Base + Base->lib_PosSize);
	struct Warp3DIFace *Self = (struct Warp3DIFace *) ExtLib->MainIFace;

	return Self->W3D_SecondaryColorPointer(
		(W3D_Context *)regarray[8],
		(void *)regarray[9],
		(int)regarray[0],
		(ULONG)regarray[1],
		(ULONG)regarray[2],
		(ULONG)regarray[3]
	);
}
STATIC CONST struct EmuTrap stub_W3D_SecondaryColorPointer = { TRAPINST, TRAPTYPE, (uint32 (*)(uint32 *))stub_W3D_SecondaryColorPointerPPC };

static ULONG stub_W3D_FogCoordPointerPPC(uint32 *regarray)
{
	struct Library *Base = (struct Library *) regarray[REG68K_A6/4];
	struct ExtendedLibrary *ExtLib = (struct ExtendedLibrary *) ((uint32)Base + Base->lib_PosSize);
	struct Warp3DIFace *Self = (struct Warp3DIFace *) ExtLib->MainIFace;

	return Self->W3D_FogCoordPointer(
		(W3D_Context *)regarray[8],
		(void *)regarray[9],
		(int)regarray[0],
		(ULONG)regarray[1],
		(ULONG)regarray[2]
	);
}
STATIC CONST struct EmuTrap stub_W3D_FogCoordPointer = { TRAPINST, TRAPTYPE, (uint32 (*)(uint32 *))stub_W3D_FogCoordPointerPPC };

static ULONG stub_W3D_InterleavedArrayPPC(uint32 *regarray)
{
	struct Library *Base = (struct Library *) regarray[REG68K_A6/4];
	struct ExtendedLibrary *ExtLib = (struct ExtendedLibrary *) ((uint32)Base + Base->lib_PosSize);
	struct Warp3DIFace *Self = (struct Warp3DIFace *) ExtLib->MainIFace;

	return Self->W3D_InterleavedArray(
		(W3D_Context *)regarray[8],
		(void *)regarray[9],
		(int)regarray[0],
		(ULONG)regarray[1],
		(ULONG)regarray[2]
	);
}
STATIC CONST struct EmuTrap stub_W3D_InterleavedArray = { TRAPINST, TRAPTYPE, (uint32 (*)(uint32 *))stub_W3D_InterleavedArrayPPC };

static ULONG stub_W3D_ClearBuffersPPC(uint32 *regarray)
{
	struct Library *Base = (struct Library *) regarray[REG68K_A6/4];
	struct ExtendedLibrary *ExtLib = (struct ExtendedLibrary *) ((uint32)Base + Base->lib_PosSize);
	struct Warp3DIFace *Self = (struct Warp3DIFace *) ExtLib->MainIFace;

	return Self->W3D_ClearBuffers(
		(W3D_Context *)regarray[8],
		(W3D_Color *)regarray[9],
		(W3D_Double *)regarray[10],
		(ULONG *)regarray[11]
	);
}
STATIC CONST struct EmuTrap stub_W3D_ClearBuffers = { TRAPINST, TRAPTYPE, (uint32 (*)(uint32 *))stub_W3D_ClearBuffersPPC };

static ULONG stub_W3D_SetParameterPPC(uint32 *regarray)
{
	struct Library *Base = (struct Library *) regarray[REG68K_A6/4];
	struct ExtendedLibrary *ExtLib = (struct ExtendedLibrary *) ((uint32)Base + Base->lib_PosSize);
	struct Warp3DIFace *Self = (struct Warp3DIFace *) ExtLib->MainIFace;

	return Self->W3D_SetParameter(
		(W3D_Context *)regarray[8],
		(ULONG)regarray[0],
		(void *)regarray[9]
	);
}
STATIC CONST struct EmuTrap stub_W3D_SetParameter = { TRAPINST, TRAPTYPE, (uint32 (*)(uint32 *))stub_W3D_SetParameterPPC };

static ULONG stub_W3D_PinTexturePPC(uint32 *regarray)
{
	struct Library *Base = (struct Library *) regarray[REG68K_A6/4];
	struct ExtendedLibrary *ExtLib = (struct ExtendedLibrary *) ((uint32)Base + Base->lib_PosSize);
	struct Warp3DIFace *Self = (struct Warp3DIFace *) ExtLib->MainIFace;

	return Self->W3D_PinTexture(
		(W3D_Context *)regarray[8],
		(W3D_Texture *)regarray[9],
		(BOOL)convert_int16(regarray[0])
	);
}
STATIC CONST struct EmuTrap stub_W3D_PinTexture = { TRAPINST, TRAPTYPE, (uint32 (*)(uint32 *))stub_W3D_PinTexturePPC };

static ULONG stub_W3D_SetDrawRegionTexturePPC(uint32 *regarray)
{
	struct Library *Base = (struct Library *) regarray[REG68K_A6/4];
	struct ExtendedLibrary *ExtLib = (struct ExtendedLibrary *) ((uint32)Base + Base->lib_PosSize);
	struct Warp3DIFace *Self = (struct Warp3DIFace *) ExtLib->MainIFace;

	return Self->W3D_SetDrawRegionTexture(
		(W3D_Context *)regarray[8],
		(W3D_Texture *)regarray[9],
		(W3D_Scissor *)regarray[10]
	);
}
STATIC CONST struct EmuTrap stub_W3D_SetDrawRegionTexture = { TRAPINST, TRAPTYPE, (uint32 (*)(uint32 *))stub_W3D_SetDrawRegionTexturePPC };
#endif

CONST CONST_APTR VecTable68K[] =
{
	&stub_Open,
	&stub_Close,
	&stub_Expunge,
	&stub_Reserved,
	&stub_W3D_CreateContext,
	&stub_W3D_DestroyContext,
	&stub_W3D_GetState,
	&stub_W3D_SetState,
	&stub_W3D_CheckDriver,
	&stub_W3D_LockHardware,
	&stub_W3D_UnLockHardware,
	&stub_W3D_WaitIdle,
	&stub_W3D_CheckIdle,
	&stub_W3D_Query,
	&stub_W3D_GetTexFmtInfo,
	&stub_W3D_AllocTexObj,
	&stub_W3D_FreeTexObj,
	&stub_W3D_ReleaseTexture,
	&stub_W3D_FlushTextures,
	&stub_W3D_SetFilter,
	&stub_W3D_SetTexEnv,
	&stub_W3D_SetWrapMode,
	&stub_W3D_UpdateTexImage,
	&stub_W3D_UploadTexture,
	&stub_W3D_DrawLine,
	&stub_W3D_DrawPoint,
	&stub_W3D_DrawTriangle,
	&stub_W3D_DrawTriFan,
	&stub_W3D_DrawTriStrip,
	&stub_W3D_SetAlphaMode,
	&stub_W3D_SetBlendMode,
	&stub_W3D_SetDrawRegion,
	&stub_W3D_SetFogParams,
	&stub_W3D_SetColorMask,
	&stub_W3D_SetStencilFunc,
	&stub_W3D_AllocZBuffer,
	&stub_W3D_FreeZBuffer,
	&stub_W3D_ClearZBuffer,
	&stub_W3D_ReadZPixel,
	&stub_W3D_ReadZSpan,
	&stub_W3D_SetZCompareMode,
	&stub_W3D_AllocStencilBuffer,
	&stub_W3D_ClearStencilBuffer,
	&stub_W3D_FillStencilBuffer,
	&stub_W3D_FreeStencilBuffer,
	&stub_W3D_ReadStencilPixel,
	&stub_W3D_ReadStencilSpan,
	&stub_W3D_SetLogicOp,
	&stub_W3D_Hint,
	&stub_W3D_SetDrawRegionWBM,
	&stub_W3D_GetDriverState,
	&stub_W3D_Flush,
	&stub_W3D_SetPenMask,
	&stub_W3D_SetStencilOp,
	&stub_W3D_SetWriteMask,
	&stub_W3D_WriteStencilPixel,
	&stub_W3D_WriteStencilSpan,
	&stub_W3D_WriteZPixel,
	&stub_W3D_WriteZSpan,
	&stub_W3D_SetCurrentColor,
	&stub_W3D_SetCurrentPen,
	&stub_W3D_UpdateTexSubImage,
	&stub_W3D_FreeAllTexObj,
	&stub_W3D_GetDestFmt,
	&stub_W3D_DrawLineStrip,
	&stub_W3D_DrawLineLoop,
	&stub_W3D_GetDrivers,
	&stub_W3D_QueryDriver,
	&stub_W3D_GetDriverTexFmtInfo,
	&stub_W3D_RequestMode,
	&stub_W3D_SetScissor,
	&stub_W3D_FlushFrame,
	&stub_W3D_TestMode,
	&stub_W3D_SetChromaTestBounds,
	&stub_W3D_ClearDrawRegion,
	&stub_W3D_DrawTriangleV,
	&stub_W3D_DrawTriFanV,
	&stub_W3D_DrawTriStripV,
	&stub_W3D_GetScreenmodeList,
	&stub_W3D_FreeScreenmodeList,
	&stub_W3D_BestModeID,
	&stub_W3D_VertexPointer,
	&stub_W3D_TexCoordPointer,
	&stub_W3D_ColorPointer,
	&stub_W3D_BindTexture,
	&stub_W3D_DrawArray,
	&stub_W3D_DrawElements,
	&stub_W3D_SetFrontFace,

#ifdef WARP3DV5
	&stub_W3D_SetTextureBlend,
	&stub_W3D_SecondaryColorPointer,
	&stub_W3D_FogCoordPointer,
	&stub_W3D_InterleavedArray,
	&stub_W3D_ClearBuffers,
	&stub_W3D_SetParameter,
	&stub_W3D_PinTexture,
	&stub_W3D_SetDrawRegionTexture,
#endif
	(CONST_APTR)-1
};
